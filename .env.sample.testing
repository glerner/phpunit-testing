# Testing Environment Configuration
# Copy this file to
# yourplugin/tests/.env.testing
# and customize for your environment


# WordPress Path Configurations - REQUIRED
# We *recommend* developing your plugin outside the WordPress installation
# and syncing it to WordPress using the sync-to-wp.php script
# These settings tell the testing framework where your WordPress installation is located

# File system location of your plugin source folder
# Note: a shorthand like ~/sites/yourplugin probably won't work
# use full path like /home/USERNAME/sites/yourplugin
PLUGIN_FOLDER=

# Note: your test files are required to be in subfolders of PLUGIN_FOLDER/tests
# (Future use: TESTS_FOLDER=)




# Test Framework Directory (Relative to yourplugin/tests/ directory)
# This is the directory containing the test framework
# Typical for Git Submodule installations: TEST_FRAMEWORK_DIR=gl-phpunit-test-framework
# Typical for Composer installations: vendor/glerner/phpunit-testing
TEST_FRAMEWORK_DIR=gl-phpunit-test-framework

# Framework File Copy Mode
# Determines how framework scripts are copied into your project's bin/ directory.
#   - 'direct': Copies files directly (e.g., 'sync-and-test.php'). This is the default and recommended for most users to ensure scripts work out-of-the-box.
#   - 'dist': Copies files with a .dist extension (e.g., 'sync-and-test.php.dist'). Use this if you plan to customize the scripts and want to prevent your changes from being overwritten during updates.
FRAMEWORK_FILE_COPY_MODE=direct

# WordPress Root Path (in any application container)
# The folder that has wp-content/ and wp-includes/
# IMPORTANT:
#   - If you are running inside a container (e.g., Lando, Docker), set WP_ROOT to the container's path (usually /app)
#   - If you are running on the host, set WP_ROOT to your local WordPress path (same as FILESYSTEM_WP_ROOT)
#   - All test execution will be built relative to WP_ROOT
#   - Most file copying will be relative to FILESYSTEM_WP_ROOT
# Note: Paths should NOT have trailing slashes
#
# Examples:
# Local: /home/username/sites/wordpress
# Lando: /app
# MAMP: /Applications/MAMP/htdocs/wordpress
WP_ROOT=/app

# The path to the WordPress installation on the filesystem (host machine only)
# - For local development: Your local WordPress path
# - For Lando: The path on your host machine, not the container path
# Without trailing slash /
FILESYSTEM_WP_ROOT=/home/USERNAME/sites/wordpress

# The folder path within WordPress where your code will be installed
# Default: wp-content/plugins (for plugins)
# Alternatives: wp-content/themes (for themes) or any custom path
# Without leading or trailing slashes
FOLDER_IN_WORDPRESS=wp-content/plugins

# The name of your plugin's directory in WordPress Plugins (wp-content/plugins/your-plugin-slug)
# This should match the folder name where your plugin is installed
# Final path will be: FILESYSTEM_WP_ROOT/FOLDER_IN_WORDPRESS/YOUR_PLUGIN_SLUG
# Without trailing slash /
YOUR_PLUGIN_SLUG=your-plugin-name

# WordPress Test Library Path (Required for integration tests)
# This is where PHPUnit expects to find the WordPress test library
# The setup script will install PHPUnit itself at:
#   FILESYSTEM_WP_ROOT/wp-content/plugins/wordpress-develop/tests/phpunit
#   unless specified here
# Use your full filesystem path, not container path
# e.g. WP_TESTS_DIR=/home/USERNAME/sites/wordpress/wp-content/plugins/wordpress-develop/tests/phpunit
# WP_TESTS_DIR=

# PHPUnit Database Configuration
# These settings allow you to customize the database used for PHPUnit tests
# If not specified, defaults will be used (WP database name + '_test' and WP table prefix)
# The user, password, host database connection parameters could be the same as for your WordPress database.
# The test database name *should be different* than the WordPress database name; you will be wiping out
# the wordpress_test database often when you run the tests.

# Custom database name for PHPUnit tests
# default WP_TESTS_DB_NAME=wordpress_test
WP_TESTS_DB_NAME=wordpress_test

# Custom table prefix for PHPUnit tests
# Useful when testing multiple plugins in the same WordPress installation
# Should end in _
WP_TESTS_TABLE_PREFIX=yourplugin_test_

# SSH Command Configuration
# The setup script needs to access both the filesystem and database
# This setting determines how database commands are executed
#
# Common options:
#   none - Run database commands directly (local development with direct DB access)
#   lando ssh - Use Lando to access the database (recommended for Lando environments)
#   ssh user@host - Connect to a remote server (for remote/staging environments)
#   ssh - Already in an SSH session with DB access (don't launch another SSH session)
#
# For local development with tools like Local by Flywheel, XAMPP, or MAMP, use 'none'
SSH_COMMAND=none

# WordPress Test Database Configuration (for integration tests)
# (database name configured above)
WP_TESTS_DB_USER=wordpress
WP_TESTS_DB_PASSWORD=wordpress
WP_TESTS_DB_HOST=database

# WordPress Test Site Configuration (for integration tests)
WP_TESTS_DOMAIN=example.org
WP_TESTS_EMAIL=admin@example.org
WP_TESTS_TITLE="Test Blog"
WP_TESTS_NETWORK_TITLE="Test Network"
WP_TESTS_SUBDOMAIN_INSTALL=1

# Test Environment

# Testing Configuration
TEST_ERROR_LOG=/tmp/phpunit-testing.log
PHP_MEMORY_LIMIT=512M
PHPUNIT_DEBUG=true
WP_PHPUNIT_TEST_LOG_DIR=tests/logs
# default type of test (should specify on command line)
PHPUNIT_BOOTSTRAP_TYPE=unit

# Code Coverage Settings
COVERAGE_REPORT_PATH=build/coverage
CLOVER_REPORT_PATH=build/logs/clover.xml






# Test Groups -- Future Enhancement
# Define groups of tests that can be run together with the --group option
# Faster execution than running all tests in the project
# Use wildcards (*) to include multiple test files without listing each one
# Format: INI-style sections with one path per line

# Uncomment and customize these examples when implementing the --group feature

# [GROUPS]

# Architectural layer groups

# [MODELS]
# tests/*/models/*

# [SERVICES]
# tests/*/services/*

# [CONTROLLERS]
# tests/*/controllers/*

# [VIEWS]
# tests/*/views/*

# Feature-centric groups

# [PALETTE_MANAGEMENT]
# tests/unit/models/palette*.php
# tests/unit/services/palette-*.php
# tests/wp-mock/controllers/palette-*.php

# [COLOR_MANIPULATION]
# tests/unit/models/color*.php
# tests/unit/services/color-*.php

# [USER_INTERFACE]
# tests/wp-mock/ui/*
# tests/integration/admin/*
